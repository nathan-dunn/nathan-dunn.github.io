{"version":3,"file":"component---src-pages-archive-js-2c6746795a61e0fa7df1.js","mappings":"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","sources":["webpack://personal-website-v3/./src/pages/archive.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport { Link, graphql } from 'gatsby';\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image';\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet';\nimport styled from 'styled-components';\nimport { srConfig } from '@config';\nimport sr from '@utils/sr';\nimport { Layout } from '@components';\nimport { Icon } from '@components/icons';\nimport { usePrefersReducedMotion } from '@hooks';\nimport Lightbox from 'yet-another-react-lightbox';\nimport 'yet-another-react-lightbox/styles.css';\n\nconst StyledTableContainer = styled.div`\n  margin: 100px -20px;\n\n  @media (max-width: 768px) {\n    margin: 50px -10px;\n  }\n\n  table {\n    width: 100%;\n    border-collapse: collapse;\n\n    .hide-on-mobile {\n      @media (max-width: 768px) {\n        display: none;\n      }\n    }\n\n    tbody tr {\n      &:hover,\n      &:focus {\n        background-color: var(--light-navy);\n      }\n    }\n\n    th,\n    td {\n      padding: 10px;\n      text-align: left;\n\n      &:first-child {\n        padding-left: 20px;\n\n        @media (max-width: 768px) {\n          padding-left: 10px;\n        }\n      }\n      &:last-child {\n        padding-right: 20px;\n\n        @media (max-width: 768px) {\n          padding-right: 10px;\n        }\n      }\n\n      svg {\n        width: 20px;\n        height: 20px;\n      }\n    }\n\n    tr {\n      cursor: default;\n\n      td:first-child {\n        border-top-left-radius: var(--border-radius);\n        border-bottom-left-radius: var(--border-radius);\n      }\n      td:last-child {\n        border-top-right-radius: var(--border-radius);\n        border-bottom-right-radius: var(--border-radius);\n      }\n    }\n\n    td {\n      &.year {\n        padding-right: 20px;\n\n        @media (max-width: 768px) {\n          padding-right: 10px;\n          font-size: var(--fz-sm);\n        }\n      }\n\n      &.title {\n        padding-top: 15px;\n        padding-right: 20px;\n        color: var(--lightest-slate);\n        font-size: var(--fz-xl);\n        font-weight: 600;\n        line-height: 1.25;\n\n        &:hover {\n          color: var(--green);\n        }\n      }\n\n      &.company {\n        font-size: var(--fz-lg);\n        white-space: nowrap;\n      }\n\n      &.tech-list {\n        font-size: var(--fz-xxs);\n        font-family: var(--font-mono);\n        line-height: 1.5;\n        .separator {\n          margin: 0 5px;\n        }\n        span {\n          display: inline-block;\n          margin-bottom: 0.5rem;\n          margin-right: 0.375rem;\n        }\n      }\n\n      &.links {\n        min-width: 100px;\n\n        div {\n          display: flex;\n          align-items: center;\n        }\n\n        .icon {\n          ${({ theme }) => theme.mixins.flexCenter};\n          padding: 10px;\n          cursor: pointer;\n\n          &:hover,\n          &:focus {\n            color: var(--green);\n          }\n\n          &.external {\n            svg {\n              width: 22px;\n              height: 22px;\n              margin-top: -4px;\n            }\n          }\n\n          svg {\n            width: 20px;\n            height: 20px;\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst ArchivePage = ({ location, data }) => {\n  const projects = data.allMarkdownRemark.edges;\n  const revealTitle = useRef(null);\n  const revealTable = useRef(null);\n  const revealProjects = useRef([]);\n  const prefersReducedMotion = usePrefersReducedMotion();\n  const [open, setOpen] = useState(false);\n  const [slides, setSlides] = useState([]);\n\n  useEffect(() => {\n    if (prefersReducedMotion) {\n      return;\n    }\n\n    sr.reveal(revealTitle.current, srConfig());\n    sr.reveal(revealTable.current, srConfig(200, 0));\n    revealProjects.current.forEach((ref, i) => sr.reveal(ref, srConfig(i * 10)));\n  }, []);\n\n  return (\n    <Layout location={location}>\n      <Helmet title=\"Archive\" />\n\n      <main>\n        <header ref={revealTitle}>\n          <h1 className=\"big-heading\">Archive</h1>\n          <p className=\"subtitle\">A short list of things I’ve worked on</p>\n        </header>\n\n        <StyledTableContainer ref={revealTable}>\n          <Lightbox\n            open={open}\n            close={() => setOpen(false)}\n            slides={slides}\n            index={0}\n            render={{\n              slide: ({ slide }, index) => (\n                <div key={index} className=\"image-wrapper\" onClick={() => setOpen(true)}>\n                  <GatsbyImage\n                    key={index}\n                    className=\"img\"\n                    image={getImage(slide.childImageSharp.huge)}\n                    alt={`Slide ${index + 1}`}\n                    style={{ maxHeight: '90vh' }}\n                    objectFit=\"contain\"\n                  />\n                </div>\n              ),\n            }}\n          />\n\n          <table>\n            <thead>\n              <tr>\n                <th>Year</th>\n                <th>Title</th>\n                <th className=\"hide-on-mobile\">Made at</th>\n                <th className=\"hide-on-mobile\">Built with</th>\n                <th>Link</th>\n              </tr>\n            </thead>\n            <tbody>\n              {projects.length > 0 &&\n                projects.map(({ node }, i) => {\n                  const {\n                    id,\n                    date,\n                    github,\n                    external,\n                    ios,\n                    android,\n                    title,\n                    tech,\n                    company,\n                    showInGallery,\n                    covers,\n                  } = node.frontmatter;\n                  return (\n                    <tr key={i} ref={el => (revealProjects.current[i] = el)}>\n                      <td className=\"overline year\">{`${new Date(date).getFullYear()}`}</td>\n\n                      <Link className=\"title\" to={i === 0 ? '/gallery' : `/gallery/#${id}`}>\n                        <td className=\"title\">{title}</td>\n                      </Link>\n\n                      <td className=\"company hide-on-mobile\">\n                        {company ? <span>{company}</span> : <span>—</span>}\n                      </td>\n\n                      <td className=\"tech-list hide-on-mobile\">\n                        {tech?.length > 0 &&\n                          tech.map((item, i) => (\n                            <span key={i} className=\"tech\">\n                              {item}\n                            </span>\n                          ))}\n                      </td>\n\n                      <td className=\"links\">\n                        <div>\n                          {showInGallery && (\n                            <span\n                              className=\"icon\"\n                              onClick={() => {\n                                setSlides(covers);\n                                setOpen(true);\n                              }}>\n                              <Icon name=\"Gallery\" />\n                            </span>\n                          )}\n                          {github && (\n                            <a href={github} aria-label=\"GitHub Link\" className=\"icon\">\n                              <Icon name=\"GitHub\" />\n                            </a>\n                          )}\n                          {external && (\n                            <a href={external} aria-label=\"External Link\" className=\"icon\">\n                              <Icon name=\"External\" />\n                            </a>\n                          )}\n                          {ios && (\n                            <a href={ios} aria-label=\"Apple App Store Link\" className=\"icon\">\n                              <Icon name=\"AppStore\" />\n                            </a>\n                          )}\n                          {android && (\n                            <a href={android} aria-label=\"Google Play Store Link\" className=\"icon\">\n                              <Icon name=\"PlayStore\" />\n                            </a>\n                          )}\n                        </div>\n                      </td>\n                    </tr>\n                  );\n                })}\n            </tbody>\n          </table>\n        </StyledTableContainer>\n      </main>\n    </Layout>\n  );\n};\nArchivePage.propTypes = {\n  location: PropTypes.object.isRequired,\n  data: PropTypes.object.isRequired,\n};\n\nexport default ArchivePage;\n\nexport const pageQuery = graphql`\n  {\n    allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/content/(featured|projects)/\" } }\n      sort: { fields: [frontmatter___date, id], order: [DESC, ASC] }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            id\n            date\n            title\n            tech\n            github\n            external\n            company\n            showInGallery\n            covers {\n              childImageSharp {\n                huge: gatsbyImageData(\n                  height: 1200\n                  placeholder: BLURRED\n                  formats: [AUTO, WEBP, AVIF]\n                  layout: CONSTRAINED\n                )\n              }\n            }\n          }\n          html\n        }\n      }\n    }\n  }\n`;\n"],"names":["StyledTableContainer","styled","div","withConfig","displayName","componentId","_ref","theme","mixins","flexCenter","_ref2","location","data","projects","allMarkdownRemark","edges","revealTitle","useRef","revealTable","revealProjects","prefersReducedMotion","usePrefersReducedMotion","open","setOpen","useState","slides","setSlides","useEffect","sr","reveal","current","srConfig","forEach","ref","i","React","Layout","Helmet","title","className","Lightbox","close","index","render","slide","_ref3","key","onClick","GatsbyImage","image","getImage","childImageSharp","huge","alt","style","maxHeight","objectFit","length","map","_ref4","node","id","date","github","external","ios","android","tech","company","showInGallery","covers","frontmatter","el","Date","getFullYear","Link","to","item","Icon","name","href"],"sourceRoot":""}